<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" Condition=" '$(CommonTargetsPath)' == '' "/>

    <PropertyGroup Label="SdkCustomization">
        <!-- PascalABC.NET compiler handles the resources itself, so there's no need in SDK targets for this. -->
        <PrepareResourceNamesDependsOn/>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <DebugMode Condition=" '$(DebugMode)' == '' ">true</DebugMode>
    </PropertyGroup>

    <PropertyGroup>
        <_PascalABCNETCompilerPackagePath>$(NuGetPackageRoot)\$(PascalABCNETCompilerPackageName)\$(PascalABCNETCompilerPackageVersion)</_PascalABCNETCompilerPackagePath>

        <_PascalAbcCompilerAssembly Condition=" $(_PascalAbcCompilerAssembly) == '' and $(SkipPascalABCNETCompilerInstallation) != true ">$(_PascalABCNETCompilerPackagePath)\tools\pabcnetcclear.exe</_PascalAbcCompilerAssembly>
        <_PascalAbcCompilerAssembly Condition=" $(_PascalAbcCompilerAssembly) == '' ">pabcnetcclear.exe</_PascalAbcCompilerAssembly>

        <_GeneratedReferenceFilePath Condition=" $(SkipGenerateReferenceFile) != 'true' ">$(IntermediateOutputPath)\References_Generated.pas</_GeneratedReferenceFilePath>

        <_GeneratedReferenceFileDirectory Condition=" $(SkipGenerateReferenceFile) != 'true' ">$([System.IO.Path]::GetDirectoryName('$(_GeneratedReferenceFilePath)'))</_GeneratedReferenceFileDirectory>

        <PascalAbcCompilerCommand Condition=" $(PascalAbcCompilerCommand) == '' ">$(_PascalAbcCompilerAssembly)</PascalAbcCompilerCommand>

        <_PascalAbcCompilerArguments Condition=" $(DebugMode) == 'true' ">$(_PascalAbcCompilerArguments) /Debug:1</_PascalAbcCompilerArguments>
        <_PascalAbcCompilerArguments Condition=" $(SkipGenerateReferenceFile) != 'true' ">$(_PascalAbcCompilerArguments) "/SearchDir:$(_GeneratedReferenceFileDirectory)"</_PascalAbcCompilerArguments>
    </PropertyGroup>

    <Target Name="GenerateReferenceFile" BeforeTargets="Compile">
        <ItemGroup>
            <_ReferenceFileLines Include="@(ReferencePath -> '{$reference %(FullPath)}')"/>
            <_ReferenceFileLines Include="unit $([System.IO.Path]::GetFileNameWithoutExtension('$(_GeneratedReferenceFilePath)'))%3b"/>
            <_ReferenceFileLines Include="end."/>
        </ItemGroup>
        <WriteLinesToFile File="$(_GeneratedReferenceFilePath)" Lines="@(_ReferenceFileLines)" Overwrite="true" WriteOnlyWhenDifferent="true"/>
    </Target>

    <Target Name="MainCompileCheck" BeforeTargets="Compile">
        <Error Condition=" @(MainCompile->Count()) > 1 "
               Text="Only one main compile item is supported. Currently, there are multiple: @(MainCompile, ', ')."/>
    </Target>

    <Target Name="Compile" BeforeTargets="Build"
            Inputs="@(Compile);@(MainCompile)"
            Outputs="@(IntermediateAssembly)">

        <PropertyGroup>
            <_CompilerOutput>@(IntermediateAssembly->'%(FullPath)')</_CompilerOutput>
        </PropertyGroup>

        <Exec Command="@(MainCompile -> '$(PascalAbcCompilerCommand) $(_PascalAbcCompilerArguments) &quot;/Output:$(_CompilerOutput)&quot; %(FullPath)')"
              Condition=" '%(Identity)' != ''"/>
    </Target>

</Project>
